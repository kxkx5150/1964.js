// Generated by CoffeeScript 2.5.1
(function() {
  /*1964js - JavaScript/HTML5 port of 1964 - N64 emulator
  Copyright (C) 2012 Joel Middendorf

  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.*/
  C1964jsVideoHLE.prototype.getGbi0MoveWordOffset = function(pc) {
    return this.core.memory.u8[pc + 1] << 8 | this.core.memory.u8[pc + 2];
  };

  C1964jsVideoHLE.prototype.getGbi0MoveWordType = function(pc) {
    return this.core.memory.u8[pc + 3];
  };

  C1964jsVideoHLE.prototype.getGbi0MoveWordValue = function(pc) {
    return this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7];
  };

  //GBI0 Dlist struct
  C1964jsVideoHLE.prototype.getGbi0DlistParam = function(pc) {
    //(@core.memory.u8[pc] << 24 | @core.memory.u8[pc + 1] << 16 | @core.memory.u8[pc + 2] << 8 | @core.memory.u8[pc + 3]) >>> 16 & 0x00ff
    return this.core.memory.u8[pc + 1];
  };

  C1964jsVideoHLE.prototype.getGbi0DlistAddr = function(pc) { //this will probably be generic getGbi0Addr
    return this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7];
  };

  C1964jsVideoHLE.prototype.getCommand = function(pc) {
    return this.core.memory.u8[pc];
  };

  //GBI0 Tri1 struct
  C1964jsVideoHLE.prototype.getGbi0Tri1Flag = function(pc) {
    return this.core.memory.u8[pc + 4];
  };

  C1964jsVideoHLE.prototype.getGbi0Tri1V0 = function(pc) {
    return this.core.memory.u8[pc + 5];
  };

  C1964jsVideoHLE.prototype.getGbi0Tri1V1 = function(pc) {
    return this.core.memory.u8[pc + 6];
  };

  C1964jsVideoHLE.prototype.getGbi0Tri1V2 = function(pc) {
    return this.core.memory.u8[pc + 7];
  };

  //GBI1 Tri2 struct
  C1964jsVideoHLE.prototype.getGbi1Tri2V3 = function(pc) {
    return this.core.memory.u8[pc + 1];
  };

  C1964jsVideoHLE.prototype.getGbi1Tri2V4 = function(pc) {
    return this.core.memory.u8[pc + 2];
  };

  C1964jsVideoHLE.prototype.getGbi1Tri2V5 = function(pc) {
    return this.core.memory.u8[pc + 3];
  };

  //GBI1 Line3D
  C1964jsVideoHLE.prototype.getGbi1Line3dV0 = function(pc) {
    return this.core.memory.u8[pc + 5];
  };

  C1964jsVideoHLE.prototype.getGbi1Line3dV1 = function(pc) {
    return this.core.memory.u8[pc + 6];
  };

  C1964jsVideoHLE.prototype.getGbi1Line3dV2 = function(pc) {
    return this.core.memory.u8[pc + 7];
  };

  C1964jsVideoHLE.prototype.getGbi1Line3dV3 = function(pc) {
    return this.core.memory.u8[pc + 4];
  };

  //GBI0 vertex struct
  C1964jsVideoHLE.prototype.getGbi0NumVertices = function(pc) {
    //(@core.memory.u8[pc] << 24 | @core.memory.u8[pc + 1] << 16 | @core.memory.u8[pc + 2] << 8 | @core.memory.u8[pc + 3]) >>> 20 & 0x0F
    return (this.core.memory.u8[pc + 1] >> 4) & 0x0F;
  };

  C1964jsVideoHLE.prototype.getGbi0Vertex0 = function(pc) {
    //(@core.memory.u8[pc] << 24 | @core.memory.u8[pc + 1] << 16 | @core.memory.u8[pc + 2] << 8 | @core.memory.u8[pc + 3]) >>> 16 & 0x0F
    return this.core.memory.u8[pc + 1] & 0x0F;
  };

  //GBI1 vertex struct
  C1964jsVideoHLE.prototype.getGbi1NumVertices = function(pc) {
    return (this.core.memory.u8[pc + 2] >>> 2) & 0x3F;
  };

  C1964jsVideoHLE.prototype.getGbi1Vertex0 = function(pc) {
    return (this.core.memory.u8[pc + 1] >>> 1) & 0x7F;
  };

  //Fiddled vertex struct - Legacy
  C1964jsVideoHLE.prototype.getFiddledVertexX = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >> 16;
  };

  C1964jsVideoHLE.prototype.getFiddledVertexY = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) << 16 >> 16;
  };

  C1964jsVideoHLE.prototype.getFiddledVertexZ = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 16;
  };

  //Vertex Struct
  C1964jsVideoHLE.prototype.getVertexX = function(pc) {
    //if ((pc>>>0) > 0x00800000)
    //  alert "oops"
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16) >> 16;
  };

  C1964jsVideoHLE.prototype.getVertexY = function(pc) {
    return (this.core.memory.u8[pc + 2] << 24 | this.core.memory.u8[pc + 3] << 16) >> 16;
  };

  C1964jsVideoHLE.prototype.getVertexZ = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16) >> 16;
  };

  C1964jsVideoHLE.prototype.getVertexW = function(pc) {
    return (this.core.memory.u8[pc + 6] << 24 | this.core.memory.u8[pc + 7] << 16) >> 16;
  };

  C1964jsVideoHLE.prototype.getVertexS = function(pc) {
    return (this.core.memory.u8[pc + 8] << 8 | this.core.memory.u8[pc + 9]) << 16 >> 16;
  };

  C1964jsVideoHLE.prototype.getVertexT = function(pc) {
    return (this.core.memory.u8[pc + 10] << 8 | this.core.memory.u8[pc + 11]) << 16 >> 16;
  };

  C1964jsVideoHLE.prototype.getVertexColorR = function(pc) {
    return this.core.memory.u8[pc + 12];
  };

  C1964jsVideoHLE.prototype.getVertexColorG = function(pc) {
    return this.core.memory.u8[pc + 13];
  };

  C1964jsVideoHLE.prototype.getVertexColorB = function(pc) {
    return this.core.memory.u8[pc + 14];
  };

  C1964jsVideoHLE.prototype.getVertexAlpha = function(pc) {
    return this.core.memory.u8[pc + 15];
  };

  C1964jsVideoHLE.prototype.getVertexNormalX = function(pc) {
    //(@core.memory.u8[pc+12] << 24 | @core.memory.u8[pc+13] << 16 | @core.memory.u8[pc+14] << 8 | @core.memory.u8[pc+15]) >> 24
    return this.core.memory.u8[pc + 12] << 24 >> 24;
  };

  C1964jsVideoHLE.prototype.getVertexNormalY = function(pc) {
    //(@core.memory.u8[pc+12] << 24 | @core.memory.u8[pc+13] << 16 | @core.memory.u8[pc+14] << 8 | @core.memory.u8[pc+15]) << 8 >> 24
    return this.core.memory.u8[pc + 13] << 24 >> 24;
  };

  C1964jsVideoHLE.prototype.getVertexNormalZ = function(pc) {
    //(@core.memory.u8[pc+12] << 24 | @core.memory.u8[pc+13] << 16 | @core.memory.u8[pc+14] << 8 | @core.memory.u8[pc+15]) << 16 >> 24
    return this.core.memory.u8[pc + 14] << 24 >> 24;
  };

  C1964jsVideoHLE.prototype.getVertexNormalA = function(pc) {
    return (this.core.memory.u8[pc + 12] << 24 | this.core.memory.u8[pc + 13] << 16 | this.core.memory.u8[pc + 14] << 8 | this.core.memory.u8[pc + 15]) << 24 >> 24;
  };

  C1964jsVideoHLE.prototype.getVertexLightX = function(pc) {
    return this.core.memory.u8[pc + 8] << 24 >> 24;
  };

  C1964jsVideoHLE.prototype.getVertexLightY = function(pc) {
    return this.core.memory.u8[pc + 9] << 24 >> 24;
  };

  C1964jsVideoHLE.prototype.getVertexLightZ = function(pc) {
    return this.core.memory.u8[pc + 10] << 24 >> 24;
  };

  //Texture Struct
  C1964jsVideoHLE.prototype.getTextureLevel = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >> 11 & 7;
  };

  C1964jsVideoHLE.prototype.getTextureTile = function(pc) {
    //(@core.memory.u8[pc] << 24 | @core.memory.u8[pc+1] << 16 | @core.memory.u8[pc+2] << 8 | @core.memory.u8[pc+3]) >> 8 & 7
    return this.core.memory.u8[pc + 2] & 7;
  };

  C1964jsVideoHLE.prototype.getTextureOn = function(pc) {
    //(@core.memory.u8[pc] << 24 | @core.memory.u8[pc+1] << 16 | @core.memory.u8[pc+2] << 8 | @core.memory.u8[pc+3]) & 15
    return this.core.memory.u8[pc + 3] & 15;
  };

  C1964jsVideoHLE.prototype.getTextureScaleS = function(pc) {
    //(@core.memory.u8[pc+4] << 24 | @core.memory.u8[pc+5] << 16 | @core.memory.u8[pc+6] << 8 | @core.memory.u8[pc+7]) >> 16 & 0xFFFF
    return this.core.memory.u8[pc + 4] << 8 | this.core.memory.u8[pc + 5];
  };

  C1964jsVideoHLE.prototype.getTextureScaleT = function(pc) {
    //(@core.memory.u8[pc+4] << 24 | @core.memory.u8[pc+5] << 16 | @core.memory.u8[pc+6] << 8 | @core.memory.u8[pc+7]) & 0xFFFF
    return this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7];
  };

  //Combine Struct
  C1964jsVideoHLE.prototype.getCombineLo = function(pc) {
    return this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3];
  };

  C1964jsVideoHLE.prototype.getCombineHi = function(pc) {
    return this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7];
  };

  C1964jsVideoHLE.prototype.getCombineA0 = function(pc) {
    return ((this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >> 20) & 15;
  };

  C1964jsVideoHLE.prototype.getCombineB0 = function(pc) {
    return ((this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 28) & 15;
  };

  C1964jsVideoHLE.prototype.getCombineC0 = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >> 15 & 31;
  };

  C1964jsVideoHLE.prototype.getCombineD0 = function(pc) {
    return ((this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 15) & 7;
  };

  C1964jsVideoHLE.prototype.getCombineA0a = function(pc) {
    return ((this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >> 12) & 7;
  };

  C1964jsVideoHLE.prototype.getCombineB0a = function(pc) {
    return ((this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 12) & 7;
  };

  C1964jsVideoHLE.prototype.getCombineC0a = function(pc) {
    return ((this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >> 9) & 7;
  };

  C1964jsVideoHLE.prototype.getCombineD0a = function(pc) {
    return ((this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 9) & 7;
  };

  C1964jsVideoHLE.prototype.getCombineA1 = function(pc) {
    return ((this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >> 5) & 15;
  };

  C1964jsVideoHLE.prototype.getCombineB1 = function(pc) {
    return ((this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 24) & 15;
  };

  C1964jsVideoHLE.prototype.getCombineC1 = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) & 31;
  };

  C1964jsVideoHLE.prototype.getCombineD1 = function(pc) {
    return ((this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 6) & 7;
  };

  C1964jsVideoHLE.prototype.getCombineA1a = function(pc) {
    return ((this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 21) & 7;
  };

  C1964jsVideoHLE.prototype.getCombineB1a = function(pc) {
    return ((this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 3) & 7;
  };

  C1964jsVideoHLE.prototype.getCombineC1a = function(pc) {
    return ((this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 18) & 7;
  };

  C1964jsVideoHLE.prototype.getCombineD1a = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) & 7;
  };

  //GBI0 matrix struct
  C1964jsVideoHLE.prototype.gbi0isProjectionMatrix = function(pc) {
    if ((this.core.memory.u8[pc + 1] & 1) !== 0) {
      return true;
    } else {
      return false;
    }
  };

  C1964jsVideoHLE.prototype.gbi0LoadMatrix = function(pc) {
    if ((this.core.memory.u8[pc + 1] & 2) !== 0) {
      return true;
    } else {
      return false;
    }
  };

  C1964jsVideoHLE.prototype.gbi0PushMatrix = function(pc) {
    if ((this.core.memory.u8[pc + 1] & 4) !== 0) {
      return true;
    } else {
      return false;
    }
  };

  C1964jsVideoHLE.prototype.gbi0PopMtxIsProjection = function(pc) {
    if ((this.core.memory.u8[pc + 7] & 1) !== 0) {
      return true;
    } else {
      return false;
    }
  };

  //TexRect struct
  //    uint32 dwXH    = (((gfx->words.w0)>>12)&0x0FFF)/4;
  // uint32 dwYH   = (((gfx->words.w0)    )&0x0FFF)/4;
  // uint32 tileno = ((gfx->words.w1)>>24)&0x07;
  // uint32 dwXL   = (((gfx->words.w1)>>12)&0x0FFF)/4;
  // uint32 dwYL   = (((gfx->words.w1)    )&0x0FFF)/4;
  // uint16 uS   = (uint16)(  dwCmd2>>16)&0xFFFF;
  // uint16 uT   = (uint16)(  dwCmd2    )&0xFFFF;
  // uint16  uDSDX   = (uint16)((  dwCmd3>>16)&0xFFFF);
  // uint16  uDTDY     = (uint16)((  dwCmd3    )&0xFFFF);
  //X coordinate of lower right
  C1964jsVideoHLE.prototype.getTexRectXh = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >>> 12 & 0xFFF;
  };

  //Y coordinate of lower right
  C1964jsVideoHLE.prototype.getTexRectYh = function(pc) {
    //(@core.memory.u8[pc] << 24 | @core.memory.u8[pc + 1] << 16 | @core.memory.u8[pc + 2] << 8 | @core.memory.u8[pc + 3]) & 0xFFF
    return (this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) & 0xFFF;
  };

  C1964jsVideoHLE.prototype.getTexRectTileNo = function(pc) {
    //(@core.memory.u8[pc+4] << 24 | @core.memory.u8[pc+5] << 16 | @core.memory.u8[pc+6] << 8 | @core.memory.u8[pc+7]) >>> 24 & 7
    return this.core.memory.u8[pc + 4] & 7;
  };

  //X coordinate of upper left
  C1964jsVideoHLE.prototype.getTexRectXl = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >>> 12 & 0xFFF;
  };

  //Y coordinate of upper left
  C1964jsVideoHLE.prototype.getTexRectYl = function(pc) {
    //(@core.memory.u8[pc+4] << 24 | @core.memory.u8[pc+5] << 16 | @core.memory.u8[pc+6] << 8 | @core.memory.u8[pc+7]) & 0xFFF
    return (this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) & 0xFFF;
  };

  C1964jsVideoHLE.prototype.getTexRectS = function(pc) {
    //(@core.memory.u8[pc+12] << 24 | @core.memory.u8[pc+13] << 16 | @core.memory.u8[pc+14] << 8 | @core.memory.u8[pc+15]) >>> 16 & 0xFFFF
    return this.core.memory.u8[pc + 12] << 8 | this.core.memory.u8[pc + 13];
  };

  C1964jsVideoHLE.prototype.getTexRectT = function(pc) {
    //(@core.memory.u8[pc+12] << 24 | @core.memory.u8[pc+13] << 16 | @core.memory.u8[pc+14] << 8 | @core.memory.u8[pc+15]) & 0xFFFF
    return this.core.memory.u8[pc + 14] << 8 | this.core.memory.u8[pc + 15];
  };

  C1964jsVideoHLE.prototype.getTexRectDsDx = function(pc) {
    return this.core.memory.getInt32(this.core.memory.u8, pc + 20) >>> 16 & 0xFFFF;
  };

  C1964jsVideoHLE.prototype.getTexRectDtDy = function(pc) {
    return this.core.memory.getInt32(this.core.memory.u8, pc + 20) & 0xFFFF;
  };

  //is this right?
  C1964jsVideoHLE.prototype.getGbi1Type = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >>> 16 & 0xFF;
  };

  C1964jsVideoHLE.prototype.getRspSegmentAddr = function(seg) {
    //TODO: May need to mask with rdram size - 1
    return (this.segments[(seg >> 24) & 0x0F] & 0xffffff) + (seg & 0xFFFFFF);
  };

  C1964jsVideoHLE.prototype.getOtherModeL = function(pc) {
    return this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3];
  };

  C1964jsVideoHLE.prototype.getOtherModeH = function(pc) {
    return this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3];
  };

  C1964jsVideoHLE.prototype.getWord0 = function(pc) {
    return this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3];
  };

  C1964jsVideoHLE.prototype.getWord1 = function(pc) {
    return this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7];
  };

  C1964jsVideoHLE.prototype.getShort = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16) >> 16;
  };

  
  //typedef struct {
  //    unsigned int    width:12;
  //    unsigned int    :7;
  //    unsigned int    siz:2;
  //    unsigned int    fmt:3;
  //    unsigned int    cmd:8;
  //    unsigned int    addr;
  //} GSetImg;

  C1964jsVideoHLE.prototype.getTImgWidth = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) & 0xFFF;
  };

  C1964jsVideoHLE.prototype.getTImgSize = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >>> 19 & 3;
  };

  C1964jsVideoHLE.prototype.getTImgFormat = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >>> 21 & 7;
  };

  C1964jsVideoHLE.prototype.getTImgAddr = function(pc) {
    var tImgAddr;
    tImgAddr = this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7];
    return this.getRspSegmentAddr(tImgAddr);
  };

  //SetTile
  C1964jsVideoHLE.prototype.getSetTileFmt = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >> 21 & 7;
  };

  C1964jsVideoHLE.prototype.getSetTileSiz = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >> 19 & 3;
  };

  C1964jsVideoHLE.prototype.getSetTileLine = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >> 9 & 0x1FF;
  };

  C1964jsVideoHLE.prototype.getSetTileTmem = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) & 0x1FF;
  };

  C1964jsVideoHLE.prototype.getSetTileTile = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 24 & 7;
  };

  C1964jsVideoHLE.prototype.getSetTilePal = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 20 & 15;
  };

  C1964jsVideoHLE.prototype.getSetTileCmt = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 18 & 3;
  };

  C1964jsVideoHLE.prototype.getSetTileMirrorT = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 15 & 1;
  };

  C1964jsVideoHLE.prototype.getSetTileMaskt = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 14 & 15;
  };

  C1964jsVideoHLE.prototype.getSetTileShiftt = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 10 & 15;
  };

  C1964jsVideoHLE.prototype.getSetTileCms = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 8 & 3;
  };

  C1964jsVideoHLE.prototype.getSetTileMirrorS = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 5 & 1;
  };

  C1964jsVideoHLE.prototype.getSetTileMasks = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 4 & 15;
  };

  C1964jsVideoHLE.prototype.getSetTileShifts = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) & 15;
  };

  //LoadBlock
  C1964jsVideoHLE.prototype.getLoadBlockTile = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 24 & 7;
  };

  C1964jsVideoHLE.prototype.getLoadBlockUls = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >> 12 & 0xFFF;
  };

  C1964jsVideoHLE.prototype.getLoadBlockUlt = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) & 0xFFF;
  };

  C1964jsVideoHLE.prototype.getLoadBlockLrs = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 12 & 0xFFF;
  };

  C1964jsVideoHLE.prototype.getLoadBlockDxt = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) & 0xFFF;
  };

  //SetTileSize
  C1964jsVideoHLE.prototype.getSetTileSizeTile = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 24 & 7;
  };

  C1964jsVideoHLE.prototype.getSetTileSizeUls = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >> 12 & 0xFFF;
  };

  C1964jsVideoHLE.prototype.getSetTileSizeUlt = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) & 0xFFF;
  };

  C1964jsVideoHLE.prototype.getSetTileSizeLrs = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >> 12 & 0xFFF;
  };

  C1964jsVideoHLE.prototype.getSetTileSizeLrt = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) & 0xFFF;
  };

  //SetPrimColor
  C1964jsVideoHLE.prototype.getSetPrimColorM = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) >>> 8 & 0xFF;
  };

  C1964jsVideoHLE.prototype.getSetPrimColorL = function(pc) {
    return (this.core.memory.u8[pc] << 24 | this.core.memory.u8[pc + 1] << 16 | this.core.memory.u8[pc + 2] << 8 | this.core.memory.u8[pc + 3]) & 0xFF;
  };

  C1964jsVideoHLE.prototype.getSetPrimColorR = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetPrimColorG = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) << 8 >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetPrimColorB = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) << 16 >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetPrimColorA = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) << 24 >>> 24;
  };

  //SetGeometryMode
  C1964jsVideoHLE.prototype.getSetGeometryMode = function(pc) {
    return this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7];
  };

  C1964jsVideoHLE.prototype.getClearGeometryMode = function(pc) {
    return this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7];
  };

  C1964jsVideoHLE.prototype.pow2roundup = function(value) {
    var result;
    result = 1;
    while (result < value) {
      result <<= 1;
    }
    return result;
  };

  //SetFillColor
  C1964jsVideoHLE.prototype.getSetFillColorR = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetFillColorG = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) << 8 >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetFillColorB = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) << 16 >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetFillColorA = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) << 24 >>> 24;
  };

  //setEnvColor
  C1964jsVideoHLE.prototype.getSetEnvColorR = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetEnvColorG = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) << 8 >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetEnvColorB = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) << 16 >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetEnvColorA = function(pc) {
    return (this.core.memory.u8[pc + 4] << 24 | this.core.memory.u8[pc + 5] << 16 | this.core.memory.u8[pc + 6] << 8 | this.core.memory.u8[pc + 7]) << 24 >>> 24;
  };

}).call(this);
